<|"Notebook" -> <|"Controller" -> "d1696931-46de-44b6-8a25-9baf19103658", 
   "FocusedCell" -> CoffeeLiqueur`Notebook`Cells`CellObj[
     CoffeeLiqueur`Notebook`Cells`CellObj`$349], 
   "MessangerChannel" -> Messanger, "ModalsChannel" -> 
    "ecd3ffbf-5469-49e1-af65-9394c124c480", "Objects" -> <||>, 
   "Path" -> "/users/kirill/Github/TK/TK.wln", 
   "PublicFields" -> {"Properties"}, "Symbols" -> <||>, 
   "TOC" -> {CoffeeLiqueur`Extensions`TOC`Private`heading[1, "Terakitchen", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$328]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, "Import core libraries", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$328]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, 
      "Import 3rd party libraries", CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$332]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, "Import WLX components", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$337]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, "App logic", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$340]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[3, 
      "Data processing pipeline", CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$340]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, 
      "Supplimentary pipleline", CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$345]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, "Landing Window", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$348]]}|>, 
 "Cells" -> {<|"Data" -> ".md\n# Terakitchen\n__Application for processing \
and managing TDS transmission spectroscopy data__\n\n<br/>\n\n## Import core \
libraries\nUsed for template engine WLX", "Display" -> "codemirror", 
    "Hash" -> "aaa6c21f-b08d-4d88-b9e6-20c1e9812dbf", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "# Terakitchen\n__Application for processing and managing TDS \
transmission spectroscopy data__\n\n<br />\n\n## Import core libraries\nUsed \
for template engine WLX", "Display" -> "markdown", 
    "Hash" -> "60fa35e8-e90f-4ab4-8d6b-a6e654bc1217", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "<<JerryI`WLX`Importer`\n<<JerryI`WLX`WebUI`", 
    "Display" -> "codemirror", "Hash" -> 
     "a9a823b4-7bef-4e84-981b-843da956146b", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "\"Caching is enabled for 1 hour! Type \
JerryI`WLX`Importer`Private`CacheControl[False] to disable it\"", 
    "Display" -> "print", "Hash" -> "1f26a15d-2b33-44e3-9834-84e4e39443ae", 
    "Invisible" -> False, "MetaOnly" -> False, "Props" -> <||>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Output", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> ".md\n## Import 3rd party libraries\nUsed for material \
parameters extraction", "Display" -> "codemirror", 
    "Hash" -> "7d1610a6-fa68-458b-b2c3-6e3d28e77b35", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> 
     "## Import 3rd party libraries\nUsed for material parameters extraction"\
, "Display" -> "markdown", "Hash" -> "000336d8-6061-4a76-979a-cc800bb0f88c", 
    "Invisible" -> False, "MetaOnly" -> False, "Props" -> <||>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Output", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "PacletRepositories[{\n    Github -> \
\"https://github.com/JerryI/wl-tds-tools\" -> \
\"master\"\n}]\n\nGet[\"JerryI`TDSTools`Trace`\"];\nGet[\"JerryI`TDSTools`Tra\
nsmission`\"];\nGet[\"JerryI`TDSTools`Material`\"];", 
    "Display" -> "codemirror", "Hash" -> 
     "e46ce71c-e282-4326-b8fd-020ff3695b9e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "(*BB[*)(\"TDTools`nGPU >> \
Done\")(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFEAk+IBFcUpmT6pKanF+\
UWJJfVMwGFPIsSczJTIYoYQESQaU5qcVcQIZTYnJ2elF+aV5KGjNIkgMk6e7knJ+TX1SkGdN/6KvG\
G/tMRqAonIdqSjAb2MaizLx0sFhIUWkqAL9iLV4=\"*)(*]BB*)", "Display" -> "print", 
    "Hash" -> "6c76185d-a7e8-45a8-bc48-03ddb00a5c4f", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "OpenCLLink`Private`cGetProgramBuildLog[151424590,\"/users/kir\
ill/Github/TK/wl_packages/JerryI_TDSTools/Kernel/nGPU.cl\",\"-DUSING_OPENCL_F\
UNCTION=1 -DOPENCLLINK_USING_GENERIC -Dmint=int -DReal_t=double \
-DUSING_DOUBLE_PRECISIONQ=1\"]", "Display" -> "print", 
    "Hash" -> "257324cf-c5b2-481b-8f22-addd21a99163", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "(*BB[*)(\"TDTools`nGPU >> Compiling to \
OpenCL\")(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFaYwgCT4gEVxSmZPqk\
pqcX5RYkl9UzAYU8ixJzMlMhuhlARJBpTmpwWxgtUWZeelgsZCi0lQA5zsZIQ==\"*)(*]BB*)", 
    "Display" -> "print", "Hash" -> "d0f11a95-dcdf-4edb-9229-b608deb5351e", 
    "Invisible" -> False, "MetaOnly" -> False, "Props" -> <||>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Output", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> ">> \"LPM >> updated last time >> Wed 14 May 2025 15:31:23\"", 
    "Display" -> "print", "Hash" -> "df146c53-6a40-4fdd-80e7-a8624ec9f64b", 
    "Invisible" -> False, "MetaOnly" -> False, "Props" -> <||>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Output", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> ">> \"LPM >> project directory >> /users/kirill/Github/TK/\"", 
    "Display" -> "print", "Hash" -> "2f1417c6-2893-4876-8130-447ab7f36b42", 
    "Invisible" -> False, "MetaOnly" -> False, "Props" -> <||>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Output", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> ".md\n## Import WLX components\nUsed for drawing windows and \
interactivity", "Display" -> "codemirror", 
    "Hash" -> "21417d25-10de-4d96-90b5-1d685f1cbd53", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> 
     "## Import WLX components\nUsed for drawing windows and interactivity", 
    "Display" -> "markdown", "Hash" -> 
     "9fbeaf10-d1d3-4947-b34a-e336eeeb28b8", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "notebookDir = NotebookDirectory[];\nmodulesDir = \
FileNameJoin[{notebookDir, \"Modules\", \"Services\"}];\nviewsDir = \
FileNameJoin[{notebookDir, \"Modules\", \"Views\"}];\n\n{fileLoader, sorter} \
= Get[FileNameJoin[{modulesDir, \"Filenames\", \
\"Filenames.wl\"}]];\nfileImporter = Get[FileNameJoin[{modulesDir, \
\"Fileimport\", \"Fileimport.wl\"}]];\nphaseUnwrap = \
Get[FileNameJoin[{modulesDir, \"Phaseunwrap\", \
\"Phaseunwrap.wl\"}]];\nmaterialParams = Get[FileNameJoin[{modulesDir, \
\"Material\", \"Material.wl\"}]];\n\nwindowContainer = \
ImportComponent[FileNameJoin[{notebookDir, \"Common\", \
\"Container.wlx\"}]];\nresultsTable = ImportComponent[FileNameJoin[{viewsDir, \
\"ResultsTable\", \"ResultsTable.wlx\"}]];\n{summary, views, exporter} = \
ImportComponent[FileNameJoin[{viewsDir, \"Summary\", \"Summary.wlx\"}]];", 
    "Display" -> "codemirror", "Hash" -> 
     "d8195a8c-d700-49b4-ba48-2beb57714a2b", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "\"Loading neural net...\"", "Display" -> "print", 
    "Hash" -> "770c9d54-5d7f-40d5-9deb-d04182851613", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> ".md\n## App logic\nCombine all together to make an \
app.\n\n<br/>\n\n### Data processing pipeline\nFrom importing files, \
processing phase, material parameters to giving the results back", 
    "Display" -> "codemirror", "Hash" -> 
     "1a97b486-6a2b-4a89-a9a0-05f5027f7a0e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "## App logic\nCombine all together to make an app.\n\n<br \
/>\n\n### Data processing pipeline\nFrom importing files, processing phase, \
material parameters to giving the results back", "Display" -> "markdown", 
    "Hash" -> "c36d3ab0-ef47-4286-b83a-9cf2c8865307", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "takeFileName[f_] := \
takeFileName[File[ToLowerCase[f[\"Tags\"][\"Filename\"][[1]]]]]\ntakeFileName\
[File[f_]] := StringReplace[ToLowerCase[f], {\n  \"_reference_\" -> \"_\", \
\"_reference\" -> \"\", \n  \"_ref\" -> \"\", \"ref_\" -> \"\", \n  \"_hole\" \
-> \"\", \"hole_\" -> \"\", \n  \"_sample\" -> \"\", \"sample\" -> \"\",\n  \
\"_sam\" -> \"\", \"sam\" -> \"\"\n}]\ntakeFileName[f_String] := \
takeFileName[File[f]]\n\nsortFiles[list_List] := With[{\n  names = \
FileBaseName[takeFileName[#]] & /@ list\n},\n  If[Length[list] > 1,\n    \
list[[sorter[names]]]\n  ,\n    list\n  ]\n]\n\nmainPipeline[notebook_, \
files_List] := With[{promise = Promise[]}, Module[{process}, \n    process = \
fileLoader[files];\n    process[\"Progress\"] = 0.2;\n\n    \
Then[process[\"Promise\"], Function[res, \n      process[\"Files\"] = .;\n    \
  Delete[process];\n      \n      process = fileImporter[res[\"Files\"]];\n   \
   process[\"Progress\"] = 0.4;\n\n      Then[process[\"Promise\"], \
Function[results,\n        process[\"Files\"] = .;\n        \
Delete[process];\n      \n        process = phaseUnwrap[results[\"Files\"]]; \
\n        process[\"Progress\"] = 0.7;\n\n        Then[process[\"Promise\"], \
Function[r,\n          process[\"Files\"] = .;\n          \
Delete[process];\n\n          Then[ChoiceDialogAsync[\"Apply high-accuracy \
material parameters extraction procedure\"], Function[choise,\n            \
If[choise,\n            \n              process = \
materialParams[r[\"Files\"]];\n              process[\"Progress\"] = \
0.85;\n\n              Then[process[\"Promise\"], Function[resultMaterial, \n \
               process[\"Files\"] = .;\n                Delete[process];\n    \
        \n                EventFire[promise, Resolve, \
sortFiles[resultMaterial[\"Files\"]]];\n             \n              ]];\n\n  \
            CellPrint[windowContainer[process, Null], \"Display\" -> \"wlx\", \
\"Target\" -> _, \"Notebook\" -> notebook, ImageSize -> {1.3 526 1.5, 1.3 651 \
/ 1.1}];            \n            \n            ,\n            \n             \
 EventFire[promise, Resolve, sortFiles[r[\"Files\"]]];\n            \n        \
    ]\n          ]];\n          \n        ]];\n\n        \
CellPrint[windowContainer[process, Null], \"Display\" -> \"wlx\", \"Target\" \
-> _, \"Notebook\" -> notebook, ImageSize -> {1.3 526 1.2, 1.3 651 / 1.4}];\n \
     ]];\n\n      CellPrint[windowContainer[process, Null], \"Display\" -> \
\"wlx\", \"Target\" -> _, \"Notebook\" -> notebook, ImageSize -> {1.3 526 \
1.2,  651}];\n    ]];\n\n    CellPrint[windowContainer[process, Null], \
\"Display\" -> \"wlx\", \"Notebook\" -> notebook, \"Target\" -> _, ImageSize \
-> {1.3 526,  1.1 651}];\n\n    promise\n\n]];", "Display" -> "codemirror", 
    "Hash" -> "5476eeb3-5312-4575-96f2-a74c3d9bd019", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "", "Display" -> "codemirror", 
    "Hash" -> "f7b78723-0b47-4bac-b1c3-16c823b7d24a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "Promise[\"92954415-4e76-49eb-a62b-0407a54372ce\"]", 
    "Display" -> "codemirror", "Hash" -> 
     "f4024b04-b336-4e49-a9c1-859a5c8a0cd8", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> ".md\n## Supplimentary pipleline\nUsed for loading folders", 
    "Display" -> "codemirror", "Hash" -> 
     "f1f9c903-6f7e-470b-a113-64af2a17bb99", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "## Supplimentary pipleline\nUsed for loading folders", 
    "Display" -> "markdown", "Hash" -> 
     "9287bffc-2d22-4fbe-9f7f-d3620309501e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "convertAllToFiles[File[f_]] := f;\nconvertAllToFiles[any_] := \
FileNameTake /@ (any[\"Tags\"][\"Filename\"]);\nconvertAllToFiles[files_List, \
path_String] := Map[FileNameJoin[{path, #}]&, convertAllToFiles /@ files // \
Flatten];\n\ngarbageTemp = {};\n\nopenFolder[notebook_, path_String] := \
With[{promise = Promise[]}, Module[{session = {}, garbageCollector},\n\n      \
AppendTo[garbageTemp, Hold[session]];\n      ClearAttributes[session, \
Temporary];\n      \n      If[FileExistsQ[FileNameJoin[{path, \
\".TK_Store\"}]],\n        session = Import[FileNameJoin[{path, \
\".TK_Store\"}], \"WXF\"];\n      ];\n\n      session = With[{files = \
FileNames[\"*.csv\" | \"*.dat\" | \"*.txt\", path]},\n        Join[session, \
File /@ Select[FileNameTake /@ files, Function[name,\n          \
With[{filename = name},\n            With[{checks = Table[\n              {\n \
               filename === i[\"Tags\"][\"Filename\"][[1]],\n                \
filename === i[\"Tags\"][\"Filename\"][[2]]\n              }\n            , \
{i, session}] // Flatten},\n              If[Length[checks] == 0,\n           \
     True,\n                (Or @@ checks) // Not\n              ]\n          \
  ]\n          ]\n        ]] ]\n      ];\n\n\n      \
CellPrint[resultsTable[sortFiles[session], <|\"View\" -> Function[files,\n\n  \
        garbageCollector;\n          \n          If[AnyTrue[files, MatchQ[#, \
_File]&],\n            FrontSubmit[Alert[\"Not possible to view unprocessed \
files\"]];\n            Return[];\n          ];\n          \n          \
CellPrint[summary[sortFiles @ files], \"Display\"->\"wlx\", \"Target\"->_, \
\"Notebook\"->notebook, ImageSize->{1.3 526 1.5, 651}];\n        \n        ], \
\"Export\" -> Function[files,\n\n          garbageCollector;\n\n          \
If[AnyTrue[files, MatchQ[#, _File]&],\n            FrontSubmit[Alert[\"Not \
possible to export unprocessed\"]];\n            Return[];\n          ];\n    \
      \n          exporter[\"Alpha\", files]\n          \n        ],\n\n      \
    \"Process\" -> Function[files, With[{win = CurrentWindow[]},\n            \
garbageCollector;\n            \n            Then[mainPipeline[notebook, \
convertAllToFiles[files, path]], Function[result,\n              \
With[{toRemove = Flatten[Map[FileNameTake, #[\"Tags\"][\"Filename\"]] &/@ \
result]},\n                With[{purged = Select[Select[session, (!MatchQ[#, \
_File])&], Function[item, \n                  !MemberQ[toRemove, \
item[\"Tags\"][\"Filename\"][[1]]]\n                ]]},\n                  \
\n                  Export[FileNameJoin[{path, \".TK_Store\"}], Join[purged, \
result], \"WXF\"];\n      \n                  openFolder[notebook, path];\n   \
               \n                  WebUIClose[win[\"Socket\"]];\n             \
     \n                ]\n              ];\n            ]];\n          ]]\n   \
     \n        |>, \"AllowProcessing\"->True], \"Display\"->\"wlx\", \
\"Target\"->_, \"Notebook\"->notebook, ImageSize->{1.3 526 1.5, 651}];\n\n    \
    garbageCollector := With[{win = CurrentWindow[]},\n           \
EventHandler[win, {\"Closed\" -> Function[Null,\n              \
ClearAll[session];\n           ]}];\n           \n           \
ClearAll[garbageCollector];\n        ];\n      \n]]", 
    "Display" -> "codemirror", "Hash" -> 
     "a00a6f8e-322c-433d-9118-34c3e0172290", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> ".md\n## Landing Window", "Display" -> "codemirror", 
    "Hash" -> "3d01fea8-1139-4fd1-bb57-b021c5dc95e6", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "## Landing Window", "Display" -> "markdown", 
    "Hash" -> "db8b84a2-5d2d-471a-a4ca-f3838a081833", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> ".wlx\n\nWith[{\n  UId = CreateUUID[],\n  event = \
CreateUUID[],\n  notebook = EvaluationNotebook[]\n}, \
Module[{garbageCollector},\n\n        garbageCollector := With[{win = \
CurrentWindow[]},\n           EventHandler[win, {\"Closed\" -> \
Function[Null,\n              ClearAll[session];\n           ]}];\n           \
\n           ClearAll[garbageCollector];\n        ];\n\nEventHandler[event, \
{\n  \"Upload\" -> Function[Null,\n    With[{promise = \
SystemDialogInputAsync[\"OpenList\", {Null, {\"Tabular Formats\" -> \
{\"*.csv\", \"*.tsv\"}, \"Plain ASCII\" -> {\"*.dat\"}}}]},\n\n      \
Then[promise, Function[files,\n        If[StringQ[files[[1]]],\n          \
With[{p = mainPipeline[notebook, files]},\n            Then[p, \
Function[result,\n              CellPrint[resultsTable[result, \n             \
 <|\n                \"View\" -> Function[files,\n                  \
garbageCollector;\n                  CellPrint[summary[sortFiles @ files], \
\"Display\" -> \"wlx\", \"Target\" -> _, \"Notebook\" -> notebook, ImageSize \
-> {1.3 526 1.5, 651}];\n                ], \n                \n              \
  \"Export\" -> Function[files,\n                  garbageCollector;\n        \
          exporter[\"Alpha\", files]\n                ]\n              |>\n   \
         ], \"Display\" -> \"wlx\", \"Target\" -> _, \"Notebook\" -> \
notebook, ImageSize -> {1.3 526 1.5, 651}];\n            ]]\n          ]\n    \
    ]\n      ]]; \n    ]\n  ],\n\n  \"Explore\" -> Function[Null,\n    \
Then[SystemDialogInputAsync[\"Directory\"], Function[path,\n      \
If[StringQ[path], openFolder[notebook, path]];\n    ]];\n    \n  ],\n\n  _ -> \
(FrontSubmit[Alert[\"Not implemented\"]]&)\n}];\n\n<div class=\"ml-auto \
mr-auto mt-auto mb-auto px-3 py-2\">\n  <div class=\"pb-4\">\n    <h4 \
class=\"text-gray-700 uppercase text-md\">Terakitchen</h4>\n    <small \
class=\"text-gray-700\">Start from here</small>\n  </div>\n<div \
class=\"ml-auto mr-auto mt-auto mb-auto flex flex-row gap-x-2\">\n  <button \
id=\"explore-{UId}\" title=\"Browse\" class=\"flex items-center gap-x-1 \
bg-gray-50 rounded border p-1 px-2\">\n    <svg class=\"w-5 h-5\" viewBox=\"0 \
0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect \
width=\"24\" height=\"24\"/>\n<path d=\"M4 9V6.47214C4 6.16165 4.07229 \
5.85542 4.21115 5.57771L5 4H10L11 6H21C21.5523 6 22 6.44772 22 7V9V18C22 \
19.1046 21.1046 20 20 20H18\" stroke=\"#000000\" stroke-linecap=\"round\" \
stroke-linejoin=\"round\"/>\n<path d=\"M17.2362 9H2.30925C1.64988 9 1.17099 \
9.62698 1.34449 10.2631L3.59806 18.5262C3.83537 19.3964 4.62569 20 5.52759 \
20H19.6908C20.3501 20 20.829 19.373 20.6555 18.7369L18.201 9.73688C18.0823 \
9.30182 17.6872 9 17.2362 9Z\" stroke=\"#000000\"/>\n</svg>\n    <span \
class=\"text-xs ml-1\">Browse</span>\n  </button>\n  <button \
id=\"upload-{UId}\" title=\"Upload\" class=\"flex items-center gap-x-1 \
bg-gray-50 rounded border p-1 px-2\">\n    <svg class=\"w-5 h-5\" viewBox=\"0 \
0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect \
width=\"24\" height=\"24\"/>\n<path d=\"M5 12V18C5 18.5523 5.44772 19 6 \
19H18C18.5523 19 19 18.5523 19 18V12\" stroke=\"#000000\" \
stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n<path d=\"M12 15L12 \
3M12 3L8 7M12 3L16 7\" stroke=\"#000000\" stroke-linecap=\"round\" \
stroke-linejoin=\"round\"/>\n</svg>\n    <span class=\"text-xs \
ml-1\">Upload</span>\n  </button>  \n</div>\n\n  <WebUIEventListener \
Id={StringJoin[\"upload-\", UId]} Event={event} Pattern={\"Upload\"} />\n  \
<WebUIEventListener Id={StringJoin[\"explore-\", UId]} Event={event} \
Pattern={\"Explore\"} />\n  \n</div>\n\n]]", "Display" -> "codemirror", 
    "Hash" -> "89de30a3-8c18-4f76-afd8-c2e199ba15ce", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>, 
   <|"Data" -> "<div class=\"ml-auto mr-auto mt-auto mb-auto px-3 py-2\"><div \
class=\"pb-4\"><h4 class=\"text-gray-700 uppercase \
text-md\">Terakitchen</h4><small class=\"text-gray-700\">Start from \
here</small></div><div class=\"ml-auto mr-auto mt-auto mb-auto flex flex-row \
gap-x-2\"><button id=\"explore-bb0d6233-4436-40c4-bb42-5bb85bd37485\" \
title=\"Browse\" class=\"flex items-center gap-x-1 bg-gray-50 rounded border \
p-1 px-2\"><svg class=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"none\" \
xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"24\" height=\"24\"/><path \
d=\"M4 9V6.47214C4 6.16165 4.07229 5.85542 4.21115 5.57771L5 4H10L11 \
6H21C21.5523 6 22 6.44772 22 7V9V18C22 19.1046 21.1046 20 20 20H18\" \
stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path \
d=\"M17.2362 9H2.30925C1.64988 9 1.17099 9.62698 1.34449 10.2631L3.59806 \
18.5262C3.83537 19.3964 4.62569 20 5.52759 20H19.6908C20.3501 20 20.829 \
19.373 20.6555 18.7369L18.201 9.73688C18.0823 9.30182 17.6872 9 17.2362 9Z\" \
stroke=\"#000000\"/></svg><span class=\"text-xs \
ml-1\">Browse</span></button><button \
id=\"upload-bb0d6233-4436-40c4-bb42-5bb85bd37485\" title=\"Upload\" \
class=\"flex items-center gap-x-1 bg-gray-50 rounded border p-1 px-2\"><svg \
class=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"none\" \
xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"24\" height=\"24\"/><path \
d=\"M5 12V18C5 18.5523 5.44772 19 6 19H18C18.5523 19 19 18.5523 19 18V12\" \
stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path \
d=\"M12 15L12 3M12 3L8 7M12 3L16 7\" stroke=\"#000000\" \
stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg><span \
class=\"text-xs ml-1\">Upload</span></button></div><script type=\"module\"> \
const el = \
document.getElementById('upload-bb0d6233-4436-40c4-bb42-5bb85bd37485');\n     \
   el.addEventListener('click', function (e) {\n            \
server.kernel.emitt('c6de3cc4-2be7-4e6d-9135-311d5c12c13f', \
'\"'+el.value+'\"', 'Upload');\n        });</script><script type=\"module\"> \
const el = \
document.getElementById('explore-bb0d6233-4436-40c4-bb42-5bb85bd37485');\n    \
    el.addEventListener('click', function (e) {\n            \
server.kernel.emitt('c6de3cc4-2be7-4e6d-9135-311d5c12c13f', \
'\"'+el.value+'\"', 'Explore');\n        });</script></div>", 
    "Display" -> "wlx", "Hash" -> "091271f7-35da-4162-8152-c6eb64575dad", 
    "Invisible" -> False, "MetaOnly" -> False, "Props" -> <||>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Output", 
    "UID" -> Null, "Notebook" -> "63224d22-c24b-4531-8d4d-f2333bf61dd6"|>}, 
 "serializer" -> "jsfn4"|>
