<|"Notebook" -> <|"Controller" -> "563a4d5d-9162-4599-a718-a518bea2d167", 
   "FocusedCell" -> CoffeeLiqueur`Notebook`Cells`CellObj[
     CoffeeLiqueur`Notebook`Cells`CellObj`$777], 
   "MessangerChannel" -> Messanger, "ModalsChannel" -> 
    "922e3b92-1aef-431a-9600-d3c5dd876118", "Objects" -> <||>, 
   "Path" -> "/Users/kirill/Library/CloudStorage/OneDrive-Personal/\:0414\
\:043e\:043a\:0443\:043c\:0435\:043d\:0442\:044b/WLJS Notebooks/TK/TK.wlw", 
   "Symbols" -> <||>, "TOC" -> {CoffeeLiqueur`Extensions`TOC`Private`heading[
      1, "Terakitchen", CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$896]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, "Import core libraries", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$896]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, 
      "Import 3rd party libraries", CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$898]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, "Import WLX components", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$902]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, "App logic", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$917]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[3, 
      "Data processing pipeline", CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$917]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, 
      "Supplimentary pipleline", CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$926]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, "Landing Window", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$1094]]}|>, 
 "Cells" -> {<|"Data" -> ".md\n# Terakitchen\n__Application for processing \
and managing TDS transmission spectroscopy data__\n\n<br/>\n\n## Import core \
libraries\nUsed for template engine WLX", "Display" -> "codemirror", 
    "Hash" -> "fbbe5362-b015-4f9f-a3d5-fed5e5210d1f", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> "# Terakitchen\n__Application for processing and managing TDS \
transmission spectroscopy data__\n\n<br />\n\n## Import core libraries\nUsed \
for template engine WLX", "Display" -> "markdown", 
    "Hash" -> "69452a46-3d76-41e8-9ca6-8bcad526082d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> "<<JerryI`WLX`Importer`\n<<JerryI`WLX`WebUI`\nJerryI`WLX`Impor\
ter`Private`CacheControl[False];", "Display" -> "codemirror", 
    "Hash" -> "8df186e5-d167-4826-9502-6934eda4f0cf", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> "\"Caching is enabled for 1 hour! Type \
JerryI`WLX`Importer`Private`CacheControl[False] to disable it\"", 
    "Display" -> "print", "Hash" -> "8e279c5a-6e2d-49d8-ac28-e5eb2a32749f", 
    "Invisible" -> False, "MetaOnly" -> False, "Props" -> <||>, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> ".md\n## Import 3rd party libraries\nUsed for material \
parameters extraction", "Display" -> "codemirror", 
    "Hash" -> "22bdd182-7177-48ab-8062-a8420ffb5d06", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> 
     "## Import 3rd party libraries\nUsed for material parameters extraction"\
, "Display" -> "markdown", "Hash" -> "f78b8de8-ac3a-48e0-bfd1-47e3219d0678", 
    "Invisible" -> False, "MetaOnly" -> False, "Props" -> <||>, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> "PacletRepositories[{\n    Github -> \
\"https://github.com/JerryI/wl-tds-tools\" -> \
\"master\"\n}]\n\nGet[\"JerryI`TDSTools`Trace`\"];\nGet[\"JerryI`TDSTools`Tra\
nsmission`\"];\nGet[\"JerryI`TDSTools`Material`\"];", 
    "Display" -> "codemirror", "Hash" -> 
     "b0838563-b362-442e-8b22-968fc1802f25", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> "(*BB[*)(\"TDTools`nGPU >> \
Done\")(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFEAk+IBFcUpmT6pKanF+\
UWJJfVMwGFPIsSczJTIYoYQESQaU5qcVcQIZTYnJ2elF+aV5KGjNIkgMk6e7knJ+TX1SkGdN/6KvG\
G/tMRqAonIdqSjAb2MaizLx0sFhIUWkqAL9iLV4=\"*)(*]BB*)", "Display" -> "print", 
    "Hash" -> "d2f40f7f-f906-4588-8dff-b8b1f7660954", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, <|"Data" -> "\" \"", 
    "Display" -> "print", "Hash" -> "e5f4f10e-ff97-4476-828a-1703123a006c", 
    "Invisible" -> False, "MetaOnly" -> False, "Props" -> <||>, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> "(*BB[*)(\"TDTools`nGPU >> Compiling to \
OpenCL\")(*,*)(*\"1:eJxTTMoPSmNiYGAo5gcSAUX5ZZkpqSn+BSWZ+XnFaYwgCT4gEVxSmZPqk\
pqcX5RYkl9UzAYU8ixJzMlMhuhlARJBpTmpwWxgtUWZeelgsZCi0lQA5zsZIQ==\"*)(*]BB*)", 
    "Display" -> "print", "Hash" -> "fca10276-5b80-4f78-b2d0-474f88889d1c", 
    "Invisible" -> False, "MetaOnly" -> False, "Props" -> <||>, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> ">> \"LPM >> updated last time >> Tue 4 Feb 2025 21:13:00\"", 
    "Display" -> "print", "Hash" -> "8e59e80d-d975-4f30-97d9-0574049b3385", 
    "Invisible" -> False, "MetaOnly" -> False, "Props" -> <||>, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> ">> \"LPM >> project directory >> \
\\\n/users/kirill/Library/CloudStorage/OneDrive-Personal/\\:0414\\:043e\\:043\
a\\:0443\\\n\\:043c\\:0435\\:043d\\:0442\\:044b/WLJS Notebooks/TK/\"", 
    "Display" -> "print", "Hash" -> "690f83ba-74d0-4616-bf65-d9c35669ddc5", 
    "Invisible" -> False, "MetaOnly" -> False, "Props" -> <||>, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> ".md\n## Import WLX components\nUsed for drawing windows and \
interactivity", "Display" -> "codemirror", 
    "Hash" -> "1daf033e-e03a-47de-81ca-feb4e6b40315", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> 
     "## Import WLX components\nUsed for drawing windows and interactivity", 
    "Display" -> "markdown", "Hash" -> 
     "43b4c0d4-57fa-4ce4-ae5e-bf472926671f", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> "notebookDir = NotebookDirectory[];\nmodulesDir = \
FileNameJoin[{notebookDir, \"Modules\", \"Services\"}];\nviewsDir = \
FileNameJoin[{notebookDir, \"Modules\", \"Views\"}];\n\n{fileLoader, sorter} \
= Get[FileNameJoin[{modulesDir, \"Filenames\", \
\"Filenames.wl\"}]];\nfileImporter = Get[FileNameJoin[{modulesDir, \
\"Fileimport\", \"Fileimport.wl\"}]];\nphaseUnwrap = \
Get[FileNameJoin[{modulesDir, \"Phaseunwrap\", \
\"Phaseunwrap.wl\"}]];\nmaterialParams = Get[FileNameJoin[{modulesDir, \
\"Material\", \"Material.wl\"}]];\n\nwindowContainer = \
ImportComponent[FileNameJoin[{notebookDir, \"Common\", \
\"Container.wlx\"}]];\nresultsTable = ImportComponent[FileNameJoin[{viewsDir, \
\"ResultsTable\", \"ResultsTable.wlx\"}]];\n{summary, views, exporter} = \
ImportComponent[FileNameJoin[{viewsDir, \"Summary\", \"Summary.wlx\"}]];", 
    "Display" -> "codemirror", "Hash" -> 
     "dfd3d2a7-cc29-4cf4-b38e-7ef1d7ccc29e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> ".md\n## App logic\nCombine all together to make an \
app.\n\n<br/>\n\n### Data processing pipeline\nFrom importing files, \
processing phase, material parameters to giving the results back", 
    "Display" -> "codemirror", "Hash" -> 
     "9528948a-b4dc-41c2-92b9-4837d2b387d1", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> "## App logic\nCombine all together to make an app.\n\n<br \
/>\n\n### Data processing pipeline\nFrom importing files, processing phase, \
material parameters to giving the results back", "Display" -> "markdown", 
    "Hash" -> "73308616-eb81-418e-8cd7-bb11dd31fc56", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> "takeFileName[f_] := \
takeFileName[File[ToLowerCase[f[\"Tags\"][\"Filename\"][[1]]]]]\ntakeFileName\
[File[f_]] := StringReplace[ToLowerCase[f], {\n  \"_reference_\" -> \"_\", \
\"_reference\" -> \"\", \n  \"_ref\" -> \"\", \"ref_\" -> \"\", \n  \"_hole\" \
-> \"\", \"hole_\" -> \"\", \n  \"_sample\" -> \"\", \"sample\" -> \"\",\n  \
\"_sam\" -> \"\", \"sam\" -> \"\"\n}]\ntakeFileName[f_String] := \
takeFileName[File[f]]\n\nsortFiles[list_List] := With[{\n  names = \
FileBaseName[takeFileName[#]] & /@ list\n},\n  If[Length[list] > 1,\n    \
list[[sorter[names]]]\n  ,\n    list\n  ]\n]\n\nmainPipeline[notebook_, \
files_List] := With[{promise = Promise[]}, Module[{process}, \n    process = \
fileLoader[files];\n    process[\"Progress\"] = 0.2;\n\n    \
Then[process[\"Promise\"], Function[res, \n      process[\"Files\"] = .;\n    \
  Delete[process];\n      \n      process = fileImporter[res[\"Files\"]];\n   \
   process[\"Progress\"] = 0.4;\n\n      Then[process[\"Promise\"], \
Function[results,\n        process[\"Files\"] = .;\n        \
Delete[process];\n      \n        process = phaseUnwrap[results[\"Files\"]]; \
\n        process[\"Progress\"] = 0.7;\n\n        Then[process[\"Promise\"], \
Function[r,\n          process[\"Files\"] = .;\n          Delete[process];\n  \
      \n          process = materialParams[r[\"Files\"]];\n          \
process[\"Progress\"] = 0.85;\n\n          Then[process[\"Promise\"], \
Function[resultMaterial, \n            process[\"Files\"] = .;\n            \
Delete[process];\n            \n            EventFire[promise, Resolve, \
sortFiles[resultMaterial[\"Files\"]]];\n             \n          ]];\n\n      \
    CellPrint[windowContainer[process, Null], \"Display\" -> \"wlx\", \
\"Target\" -> _, \"Notebook\" -> notebook, ImageSize -> {1.3 526 1.5, 1.3 651 \
/ 1.1}];\n        ]];\n\n        CellPrint[windowContainer[process, Null], \
\"Display\" -> \"wlx\", \"Target\" -> _, \"Notebook\" -> notebook, ImageSize \
-> {1.3 526 1.2, 1.3 651 / 1.4}];\n      ]];\n\n      \
CellPrint[windowContainer[process, Null], \"Display\" -> \"wlx\", \"Target\" \
-> _, \"Notebook\" -> notebook, ImageSize -> {1.3 526 1.2,  651}];\n    \
]];\n\n    CellPrint[windowContainer[process, Null], \"Display\" -> \"wlx\", \
\"Notebook\" -> notebook, \"Target\" -> _, ImageSize -> {1.3 526,  1.1 \
651}];\n\n    promise\n\n]];", "Display" -> "codemirror", 
    "Hash" -> "1c8a83d2-bf7c-440d-9373-79edc53cd73a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> ".md\n## Supplimentary pipleline\nUsed for loading folders", 
    "Display" -> "codemirror", "Hash" -> 
     "ac4e4500-af54-4bb5-89c2-d135a7d5c601", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> "## Supplimentary pipleline\nUsed for loading folders", 
    "Display" -> "markdown", "Hash" -> 
     "19de0a28-ce11-495b-8bed-41ff723c1f33", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> "convertAllToFiles[File[f_]] := f;\nconvertAllToFiles[any_] := \
FileNameTake /@ (any[\"Tags\"][\"Filename\"]);\nconvertAllToFiles[files_List, \
path_String] := Map[FileNameJoin[{path, #}]&, convertAllToFiles /@ files // \
Flatten];\n\nopenFolder[notebook_, path_String] := With[{promise = \
Promise[]}, Module[{session = {}, garbageCollector},\n\n      \
If[FileExistsQ[FileNameJoin[{path, \".TK_Store\"}]],\n        session = \
Import[FileNameJoin[{path, \".TK_Store\"}], \"WXF\"];\n      ];\n\n      \
session = With[{files = FileNames[\"*.csv\" | \"*.dat\" | \"*.txt\", \
path]},\n        Join[session, File /@ Select[FileNameTake /@ files, \
Function[name,\n          With[{filename = name},\n            With[{checks = \
Table[\n              {\n                filename === \
i[\"Tags\"][\"Filename\"][[1]],\n                filename === \
i[\"Tags\"][\"Filename\"][[2]]\n              }\n            , {i, session}] \
// Flatten},\n              If[Length[checks] == 0,\n                True,\n  \
              (Or @@ checks) // Not\n              ]\n            ]\n         \
 ]\n        ]] ]\n      ];\n\n\n      \
CellPrint[resultsTable[sortFiles[session], <|\"View\" -> Function[files,\n\n  \
        garbageCollector;\n          \n          If[AnyTrue[files, MatchQ[#, \
_File]&],\n            FrontSubmit[Alert[\"Not possible to view unprocessed \
files\"]];\n            Return[];\n          ];\n          \n          \
CellPrint[summary[sortFiles @ files], \"Display\"->\"wlx\", \"Target\"->_, \
\"Notebook\"->notebook, ImageSize->{1.3 526 1.5, 651}];\n        \n        ], \
\"Export\" -> Function[files,\n\n          garbageCollector;\n\n          \
If[AnyTrue[files, MatchQ[#, _File]&],\n            FrontSubmit[Alert[\"Not \
possible to export unprocessed\"]];\n            Return[];\n          ];\n    \
      \n          exporter[\"Alpha\", files]\n          \n        ],\n\n      \
    \"Process\" -> Function[files, With[{win = CurrentWindow[]},\n            \
garbageCollector;\n            \n            Then[mainPipeline[notebook, \
convertAllToFiles[files, path]], Function[result,\n              \
With[{toRemove = Flatten[Map[FileNameTake, #[\"Tags\"][\"Filename\"]] &/@ \
result]},\n                With[{purged = Select[Select[session, (!MatchQ[#, \
_File])&], Function[item, \n                  !MemberQ[toRemove, \
item[\"Tags\"][\"Filename\"][[1]]]\n                ]]},\n                  \
\n                  Export[FileNameJoin[{path, \".TK_Store\"}], Join[purged, \
result], \"WXF\"];\n      \n                  openFolder[notebook, path];\n   \
               \n                  WebUIClose[win[\"Socket\"]];\n             \
     \n                ]\n              ];\n            ]];\n          ]]\n   \
     \n        |>, \"AllowProcessing\"->True], \"Display\"->\"wlx\", \
\"Target\"->_, \"Notebook\"->notebook, ImageSize->{1.3 526 1.5, 651}];\n\n    \
    garbageCollector := With[{win = CurrentWindow[]},\n           \
EventHandler[win, {\"Closed\" -> Function[Null,\n              \
ClearAll[session];\n           ]}];\n           \n           \
ClearAll[garbageCollector];\n        ];\n      \n]]", 
    "Display" -> "codemirror", "Hash" -> 
     "e30578da-4997-45d3-9b63-1fc9d9889f80", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> ".md\n## Landing Window", "Display" -> "codemirror", 
    "Hash" -> "d80a8132-5a34-48f4-aac3-6fee7106f62c", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> "## Landing Window", "Display" -> "markdown", 
    "Hash" -> "8580b86f-e55d-47e9-bc5d-23d5ffd2c115", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b430cd6e-61cd-4147-a744-49485ae3e99a"|>, 
   <|"Data" -> ".wlx\n\nWith[{\n  UId = CreateUUID[],\n  event = \
CreateUUID[],\n  notebook = EvaluationNotebook[]\n}, \
Module[{garbageCollector},\n\n        garbageCollector := With[{win = \
CurrentWindow[]},\n           EventHandler[win, {\"Closed\" -> \
Function[Null,\n              ClearAll[session];\n           ]}];\n           \
\n           ClearAll[garbageCollector];\n        ];\n\nEventHandler[event, \
{\n  \"Upload\" -> Function[Null,\n    With[{promise = \
SystemDialogInputAsync[\"OpenList\", {Null, {\"Tabular Formats\" -> \
{\"*.csv\", \"*.tsv\"}, \"Plain ASCII\" -> {\"*.dat\"}}}]},\n\n      \
Then[promise, Function[files,\n        If[StringQ[files[[1]]],\n          \
With[{p = mainPipeline[notebook, files]},\n            Then[p, \
Function[result,\n              CellPrint[resultsTable[result, \n             \
 <|\n                \"View\" -> Function[files,\n                  \
garbageCollector;\n                  CellPrint[summary[sortFiles @ files], \
\"Display\" -> \"wlx\", \"Target\" -> _, \"Notebook\" -> notebook, ImageSize \
-> {1.3 526 1.5, 651}];\n                ], \n                \n              \
  \"Export\" -> Function[files,\n                  garbageCollector;\n        \
          exporter[\"Alpha\", files]\n                ]\n              |>\n   \
         ], \"Display\" -> \"wlx\", \"Target\" -> _, \"Notebook\" -> \
notebook, ImageSize -> {1.3 526 1.5, 651}];\n            ]]\n          ]\n    \
    ]\n      ]]; \n    ]\n  ],\n\n  \"Explore\" -> Function[Null,\n    \
Then[SystemDialogInputAsync[\"Directory\"], Function[path,\n      \
If[StringQ[path], openFolder[notebook, path]];\n    ]];\n    \n  ],\n\n  _ -> \
(FrontSubmit[Alert[\"Not implemented\"]]&)\n}];\n\n<div class=\"ml-auto \
mr-auto mt-auto mb-auto px-3 py-2\">\n  <div class=\"pb-4\">\n    <h4 \
class=\"text-gray-700 uppercase text-md\">Terakitchen</h4>\n    <small \
class=\"text-gray-700\">Start from here</small>\n  </div>\n<div \
class=\"ml-auto mr-auto mt-auto mb-auto flex flex-row gap-x-2\">\n  <button \
id=\"explore-{UId}\" title=\"Browse\" class=\"flex items-center gap-x-1 \
bg-gray-50 rounded border p-1 px-2\">\n    <svg class=\"w-5 h-5\" viewBox=\"0 \
0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect \
width=\"24\" height=\"24\"/>\n<path d=\"M4 9V6.47214C4 6.16165 4.07229 \
5.85542 4.21115 5.57771L5 4H10L11 6H21C21.5523 6 22 6.44772 22 7V9V18C22 \
19.1046 21.1046 20 20 20H18\" stroke=\"#000000\" stroke-linecap=\"round\" \
stroke-linejoin=\"round\"/>\n<path d=\"M17.2362 9H2.30925C1.64988 9 1.17099 \
9.62698 1.34449 10.2631L3.59806 18.5262C3.83537 19.3964 4.62569 20 5.52759 \
20H19.6908C20.3501 20 20.829 19.373 20.6555 18.7369L18.201 9.73688C18.0823 \
9.30182 17.6872 9 17.2362 9Z\" stroke=\"#000000\"/>\n</svg>\n    <span \
class=\"text-xs ml-1\">Browse</span>\n  </button>\n  <button \
id=\"upload-{UId}\" title=\"Upload\" class=\"flex items-center gap-x-1 \
bg-gray-50 rounded border p-1 px-2\">\n    <svg class=\"w-5 h-5\" viewBox=\"0 \
0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect \
width=\"24\" height=\"24\"/>\n<path d=\"M5 12V18C5 18.5523 5.44772 19 6 \
19H18C18.5523 19 19 18.5523 19 18V12\" stroke=\"#000000\" \
stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n<path d=\"M12 15L12 \
3M12 3L8 7M12 3L16 7\" stroke=\"#000000\" stroke-linecap=\"round\" \
stroke-linejoin=\"round\"/>\n</svg>\n    <span class=\"text-xs \
ml-1\">Upload</span>\n  </button>  \n</div>\n\n  <WebUIEventListener \
Id={StringJoin[\"upload-\", UId]} Event={event} Pattern={\"Upload\"} />\n  \
<WebUIEventListener Id={StringJoin[\"explore-\", UId]} Event={event} \
Pattern={\"Explore\"} />\n  \n</div>\n\n]]", "Display" -> "codemirror", 
    "Hash" -> "e1bd2b13-c2fb-4f58-8dcf-0a3a1480ed9a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b430cd6e-61cd-4147-a744-49485ae3e99a"|>}, "serializer" -> "jsfn4"|>
