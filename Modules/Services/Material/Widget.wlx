widget[initial_TransmissionObject, OptionsPattern[]] := Module[{
  System`alpha,
  System`n,
  System`rawAlpha,
  System`name = "",
  transmission,
  parameters,
  oldset = Null,
  update,
  material,
  fdci,
  object
},

object["Next"] = Function[m,
    If[oldset =!= Null,
        transmission = Append[m, {"Thickness"->oldset["Thickness"], "Gain"->oldset["Gain"], "PhaseShift"->oldset["PhaseShift"]}];
    ,
        transmission = m;
    ];
    System`name = FileBaseName[m["Tags"]["Filename"][[1]]];
    fdci = QuantityMagnitude[#, 1/"Centimeters"] &/@ m["FDCI"];
    fdci = {fdci[[1]] / 2.0, 2.0 fdci[[2]] };
    material = MaterialParameters[transmission, "Target"->"GPU", "FabryPerotCancellation"->False];
    System`rawAlpha = Select[QuantityMagnitude[material["\[Alpha]"], {1/"Centimeters", 1/"Centimeters"}], (#[[1]] >= fdci[[1]] && #[[1]] <= fdci[[2]])&];
    update[oldset];
];

object["Get"] := material;

update = Function[set,
        oldset = set;
        transmission = Append[transmission, {"Thickness"->set["Thickness"], "Gain"->set["Gain"], "PhaseShift"->set["PhaseShift"]}];
        material = MaterialParameters[transmission, "Target"->"GPU"];
        System`alpha = Select[QuantityMagnitude[material["\[Alpha]"], {1/"Centimeters", 1/"Centimeters"}], (#[[1]] >= fdci[[1]] && #[[1]] <= fdci[[2]])&];
        System`n = Select[QuantityMagnitude[material["n"], {1/"Centimeters", 1}], (#[[1]] >= fdci[[1]] && #[[1]] <= fdci[[2]])&];
];

parameters = <|"Thickness" -> OptionValue["Thickness"], "Gain"->OptionValue["Gain"], "PhaseShift"->OptionValue["PhaseShift"]|>;

parameters["Thickness"] = initial["Thickness"];
parameters["Gain"] = initial["Gain"];


oldset = parameters;
object["Next"][initial];

With[{
  ev = EventObject[]
},

  EventHandler[ev, {
    "Gain" -> Function[value,
      parameters["Gain"] = value;
      update[parameters];
    ],

    "PhaseShift" -> Function[value,
      parameters["PhaseShift"] = value;
      update[parameters];
    ],

    "Thickness" -> Function[value,
      parameters["Thickness"] = Quantity[value, "Millimeters"];
      update[parameters];
    ]
  }];

  object["Destroy"] := With[{},
    EventRemove[ev];
    ClearAll[
        transmission,
        parameters,
        oldset,
        update,
        material,
        fdci,
        object
    ];
  ];
  

  object["View"] = With[{
    Controls = With[{
      PhaseShift = InputRange[ev, -3,3,1, parameters["PhaseShift"], "Label"->"Phase shift", "Topic"->"PhaseShift"],
      Thickness = With[{t = QuantityMagnitude[parameters["Thickness"], "Millimeters"]},
        InputRange[ev, t 0.5, t 1.5, t / 150.0, t, "Label"->"Thickness (mm)", "Topic"->"Thickness"]
      ],
      Gain = InputRange[ev, 0.2, 1.8, 0.05, parameters["Gain"], "Label"->"Gain", "Topic"->"Gain"],
      Filename = TextView[System`name // Offload]
    },
      <div class="flex flex-col gap-y-2 pl-3 mt-5">
        <PhaseShift/>
        <Thickness/>
        <Gain/>
        <div></div>
        <h5 class="text-gray-900">Sample information</h5>
        <Filename/>
      </div>
    ],

    GraphicsWindow = With[{
      Graphics1 = Graphics[{
        {ColorData[97][1], Opacity[0.5], Line[System`rawAlpha // Offload]},
        ColorData[97][2], Line[System`alpha // Offload]
      }, ImageSize->{500,350}, Frame->True, Axes->True, "GUI"->False, FrameLabel->{"wavenumber (cm^{-1})", "absorption coefficient (cm^{-1})"}],
      Graphics2 = Graphics[{
        ColorData[97][3], Line[System`n // Offload]
      }, ImageSize->{500,200}, Frame->True, Axes->True, "GUI"->False, FrameLabel->{"wavenumber (cm^{-1})", "n"}]  
    }, 

      <div class="flex flex-col gap-y-3">
        <Graphics1/>
        <Graphics2/>
      </div>
    
    ]
  }, 

    <div class="gap-x-2 flex h-full justify-between pr-2 divide-x flex-row mt-2">
      <GraphicsWindow/>
      <Controls/>
    </div>
  
  ];


  object
] ]

Options[widget] = {"Gain"->1.0, "PhaseShift"->0, "Thickness" -> Quantity[1, "Millimeters"]}

widget